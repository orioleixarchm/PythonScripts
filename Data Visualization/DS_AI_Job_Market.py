#Importing Packages
import kagglehub
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

#Loading data
path = kagglehub.dataset_download("bismasajjad/global-ai-job-market-and-salary-trends-2025")
print(os.listdir(path),'\n')
data = pd.read_csv(f'{path}/ai_job_dataset.csv')
print(data.head(50),'\n')
print(data.info(),'\n')

for col in data.columns:
    print(f'Column {col}:')
    print(data[col].unique() if data[col].nunique()<=15 else 'Too many values to list.','\n')

#General visualization
fig_I, axes_I = plt.subplots(2,2)
fig_I.tight_layout(pad=2)
fig_I.suptitle('Value Counts for th main Categorical Variables', fontsize=16)
axes_I = axes_I.flatten()
for ax, col in zip(axes_I, ['experience_level','company_size','remote_ratio','education_required']):
    sns.countplot(data=data, x=col, linewidth=1, edgecolor='black', ax=ax)
    ax.set_ylabel('Nº Observations')
    ax.set_xlabel(col.replace('_',' ').title())
    ax.set_title(None)

#Salary distributions
fig_II, axes_II = plt.subplots(2,2)
fig_II.tight_layout(pad=2)
fig_II.suptitle('Salary Distribution in US Dollars $', fontsize=16)
axes_II = axes_II.flatten()
for ax, col in zip(axes_II, ['experience_level','company_size','remote_ratio','education_required']):
    sns.violinplot(data=data, x=col, y='salary_usd', linewidth=1, edgecolor='black', ax=ax)
    ax.set_title(f'Salary by {col.replace('_',' ').title()}')
    ax.set_xlabel(None)
    ax.set_ylabel(None)

fig_III, axes_III = plt.subplots(1,3)
fig_III.tight_layout(pad=1)
axes_III = axes_III.flatten()
sns.histplot(data=data, x='salary_usd', edgecolor='black', linewidth=1, ax=axes_III[0])
axes_III[0].set_ylabel(None)
axes_III[0].set_xlabel(None)
axes_III[0].set_title('Salaries Distribution')
sns.histplot(data=data, x='years_experience', edgecolor='black', linewidth=1, ax=axes_III[1])
axes_III[1].set_ylabel(None)
axes_III[1].set_xlabel(None)
axes_III[1].set_title('Years of Experience Distribution')
sns.histplot(data=data, x='benefits_score', edgecolor='black', linewidth=1, ax=axes_III[2])
axes_III[2].set_ylabel(None)
axes_III[2].set_xlabel(None)
axes_III[2].set_title('Benefits Score Distribution')

#Tops and bottoms
data_top_5 = data.groupby('industry')[['salary_usd','benefits_score']].mean().nlargest(5,'salary_usd').sort_values(by='salary_usd', ascending=False).reset_index()
data_bottom_5 = data.groupby('industry')[['salary_usd','benefits_score']].mean().nsmallest(5,'salary_usd').sort_values(by='salary_usd', ascending=False).reset_index()
fig_IV, axis_IV = plt.subplots(2,2)
fig_IV.tight_layout(pad=0.5)
axis_IV = axis_IV.flatten()
sns.barplot(data=data_top_5, x='industry', y='salary_usd', ax=axis_IV[0], edgecolor='black', linewidth=1, color='blue')
axis_IV[0].set_title('Top 5 Industries with higher salaries')
axis_IV[0].set_xlabel('Industry')
axis_IV[0].set_ylabel('Average Salary in US Dollars ($)')
sns.barplot(data=data_bottom_5, x='industry', y='salary_usd', ax=axis_IV[1], edgecolor='black', linewidth=1, color='red')
axis_IV[1].set_title('Bottom 5 Industries with lower salaries')
axis_IV[1].set_xlabel('Industry')
axis_IV[1].set_ylabel('Average Salary in US Dollars ($)')
data_top_5 = data.groupby('industry')[['salary_usd','benefits_score']].mean().nlargest(5,'benefits_score').sort_values(by='benefits_score', ascending=False).reset_index()
data_bottom_5 = data.groupby('industry')[['salary_usd','benefits_score']].mean().nsmallest(5,'benefits_score').sort_values(by='benefits_score', ascending=False).reset_index()
sns.barplot(data=data_top_5, x='industry', y='benefits_score', ax=axis_IV[2], edgecolor='black', linewidth=1, color='lightblue')
axis_IV[2].set_title('Top 5 Industries with higher Benefits score')
axis_IV[2].set_xlabel('Industry')
axis_IV[2].set_ylabel('Average Benefits score')
sns.barplot(data=data_bottom_5, x='industry', y='benefits_score', ax=axis_IV[3], edgecolor='black', linewidth=1, color='tomato')
axis_IV[3].set_title('Bottom 5 Industries with lower Benefits score')
axis_IV[3].set_xlabel('Industry')
axis_IV[3].set_ylabel('Average Benefits score')

#Salaries, Education Level and Experience
fig_V, axis_V = plt.subplots(2,3, figsize=(8, 8))
fig_V.tight_layout(pad=2)
axis_V = axis_V.flatten()
sns.regplot(data=data, x='years_experience', y='salary_usd', ax=axis_V[0], color='blue')
sns.scatterplot(data=data, x='years_experience', y='salary_usd', linewidth=1, edgecolor='black', ax=axis_V[0])
axis_V[0].set_title('Experience vs Salary')
axis_V[0].set_ylabel('Salary in US dollars ($)')
axis_V[0].set_xlabel('Experience Years')
sns.regplot(data=data[data['education_required']=='Associate'], x='years_experience', y='salary_usd', ax=axis_V[1], color='darkred')
sns.scatterplot(data=data[data['education_required']=='Associate'], x='years_experience', y='salary_usd', linewidth=1, edgecolor='black', ax=axis_V[1])
axis_V[1].set_title('Experience vs Salary for Associates')
axis_V[1].set_ylabel('Salary in US dollars ($)')
axis_V[1].set_xlabel('Experience Years')
sns.regplot(data=data[data['education_required']=='Bachelor'], x='years_experience', y='salary_usd', ax=axis_V[2], color='darkgreen')
sns.scatterplot(data=data[data['education_required']=='Bachelor'], x='years_experience', y='salary_usd', linewidth=1, edgecolor='black', ax=axis_V[2])
axis_V[2].set_title('RExperience vs Salary for Bachelor Holders')
axis_V[2].set_ylabel('Salary in US dollars ($)')
axis_V[2].set_xlabel('Experience Years')
sns.regplot(data=data[data['education_required']=='Master'], x='years_experience', y='salary_usd', ax=axis_V[3], color='darkblue')
sns.scatterplot(data=data[data['education_required']=='Master'], x='years_experience', y='salary_usd', linewidth=1, edgecolor='black', ax=axis_V[3])
axis_V[3].set_title('Experience vs Salary for Masters holders')
axis_V[3].set_ylabel('Salary in US dollars ($)')
axis_V[3].set_xlabel('Experience Years')
sns.regplot(data=data[data['education_required']=='PhD'], x='years_experience', y='salary_usd', ax=axis_V[4], color='orange')
sns.scatterplot(data=data[data['education_required']=='PhD'], x='years_experience', y='salary_usd', linewidth=1, edgecolor='black', ax=axis_V[4])
axis_V[4].set_title('Experience vs Salary for PhDs')
axis_V[4].set_ylabel('Salary in US dollars ($)')
axis_V[4].set_xlabel('Experience Years')
sns.regplot(data=data[data['education_required']=='Asociate'], x='years_experience', y='salary_usd', ax=axis_V[5], color='darkred', label='Asociate')
sns.regplot(data=data[data['education_required']=='Bachelor'], x='years_experience', y='salary_usd', ax=axis_V[5], color='darkgreen', label='Bachelor')
sns.regplot(data=data[data['education_required']=='Master'], x='years_experience', y='salary_usd', ax=axis_V[5], color='darkblue', label='Master')
sns.regplot(data=data[data['education_required']=='PhD'], x='years_experience', y='salary_usd', ax=axis_V[5], color='orange', label='PhD')
sns.regplot(data=data, x='years_experience', y='salary_usd', ax=axis_V[5], color='purple')
sns.scatterplot(data=data, x='years_experience', y='salary_usd', linewidth=1, edgecolor='black', ax=axis_V[5])
axis_V[5].set_title('Relation between experience and salary')
axis_V[5].set_ylabel('Salary in US dollars ($)')
axis_V[5].set_xlabel('Experience Years')

fig_VI, axis_VI = plt.subplots(1,2)
fig_VI.tight_layout(pad=3)
axis_VI = axis_VI.flatten()
sns.scatterplot(data=data, x='years_experience', y='salary_usd', hue='experience_level', linewidth=1, ax=axis_VI[0])
axis_VI[0].set_title('Salary Experience and Position')
axis_VI[0].set_ylabel('Salary in US dollars ($)')
axis_VI[0].set_xlabel('Experience Years')
sns.scatterplot(data=data, x='years_experience', y='salary_usd', hue='education_required', linewidth=1, ax=axis_VI[1])
axis_VI[1].set_title('Salary Experience and Education')
axis_VI[1].set_ylabel('Salary in US dollars ($)')
axis_VI[1].set_xlabel('Experience Years')

data_pivot = data.pivot_table(values='salary_usd', index='education_required', columns='industry', aggfunc='mean')
fig_VII, axis_VII = plt.subplots()
fig_VII.tight_layout(pad=3)
sns.heatmap(data=data_pivot, annot=True, cmap='coolwarm', fmt=".0f",linecolor='black', linewidth=0.5)
plt.title('Average Salary by Education and Industry')
plt.xlabel('Industry')
plt.xticks(rotation=30)
plt.ylabel('Education Level')

#Posting frequency
data['posting_date'] = pd.to_datetime(data['posting_date'])
data_day_trend = data.groupby('posting_date').size().sort_index()
data_month_trend = data.groupby(data['posting_date'].dt.to_period('M')).size()
data_month_trend.index = data_month_trend.index.to_timestamp()
data_month_trend = data_month_trend.sort_index()
fig_VIII, axis_VIII = plt.subplots(2,1)
fig_VIII.tight_layout(pad=2)
sns.lineplot(x=data_day_trend.index, y=data_day_trend.values, marker='o', linewidth=1, markeredgecolor='black', ax=axis_VIII[0])
axis_VIII[0].set_title('Daily Job offers')
axis_VIII[0].set_ylabel('Nº of Job offers')
axis_VIII[0].set_xlabel(None)
axis_VIII[0].set_xticks(data_month_trend.index)
axis_VIII[0].set_xticklabels(data_month_trend.index.strftime('%Y-%m'))
sns.lineplot(x=data_month_trend.index, y=data_month_trend.values, marker='o', linewidth=2, markeredgecolor='black', ax=axis_VIII[1])
axis_VIII[1].set_title('Monthly Job offers')
axis_VIII[1].set_ylabel('Nº of Job offers')
axis_VIII[1].set_xlabel(None)
axis_VIII[1].set_xticks(data_month_trend.index)
axis_VIII[1].set_xticklabels(data_month_trend.index.strftime('%Y-%m'))

plt.show()
